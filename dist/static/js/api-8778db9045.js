function getcurrentNodes(){for(var e,a=myDiagram.nodes;a.next();){var n=a.value;n.isSelected&&(e=n.data)}return e}function getcurrentLinks(){for(var e,a=myDiagram.links;a.next();){var n=a.value;n.isSelected&&(e=n.data)}return e}function deleteSelection(){myDiagram.commandHandler.deleteSelection()}function undo(){myDiagram.commandHandler.undo()}function decreaseZoom(){if(myDiagram.scale<.1)return!1;myDiagram.scale=myDiagram.scale-.02}function increaseZoom(){if(2<myDiagram.scale)return!1;myDiagram.scale=myDiagram.scale+.02}function selectAll(){myDiagram.nodes.each(function(e){e.isSelected=!0}),myDiagram.links.each(function(e){e.isSelected=!0})}function reverseSelected(){myDiagram.nodes.each(function(e){e.isSelected=!e.isSelected}),myDiagram.links.each(function(e){e.isSelected=!e.isSelected})}function myCallback(e){var a=window.URL.createObjectURL(e),n="mySVGFile.svg",i=document.createElement("a");i.style="display: none",i.href=a,i.download=n,void 0===window.navigator.msSaveBlob?(document.body.appendChild(i),requestAnimationFrame(function(){i.click(),window.URL.revokeObjectURL(a),document.body.removeChild(i)})):window.navigator.msSaveBlob(e,n)}function makeSvg(){var e=myDiagram.makeSvg({scale:1,background:"white"}),a=(new XMLSerializer).serializeToString(e);myCallback(new Blob([a],{type:"image/svg+xml"}))}function myCallback_img(e){var a=window.URL.createObjectURL(e),n="imgPng.png",i=document.createElement("a");i.style="display: none",i.href=a,i.download=n,void 0===window.navigator.msSaveBlob?(document.body.appendChild(i),requestAnimationFrame(function(){i.click(),window.URL.revokeObjectURL(a),document.body.removeChild(i)})):window.navigator.msSaveBlob(e,n)}function makeBlob(){myDiagram.makeImageData({background:"white",returnType:"blob",scale:1,callback:myCallback_img})}Array.prototype.equals&&console.warn("Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code."),Array.prototype.equals=function(e){if(!e)return!1;if(this.length!=e.length)return!1;for(var a=0,n=this.length;a<n;a++)if(this[a]instanceof Array&&e[a]instanceof Array){if(!this[a].equals(e[a]))return!1}else if(this[a]!=e[a])return!1;return!0},Object.defineProperty(Array.prototype,"equals",{enumerable:!1});